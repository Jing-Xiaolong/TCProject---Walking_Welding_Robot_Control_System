<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="Walking_Welding_Robot_Control" Id="{8e39efaa-e50d-42a8-85bf-d06f1376f76b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Walking_Welding_Robot_Control
VAR_INPUT
	// ====== 整体界面激活 ======
	Walking_Welding_Robot_Joint_Control	: BOOL;				// 允许对界面进行操作,对应UI中的Enable_All_Buttons
	
	// ====== 模块使能信号 ======
	Walking_Welding_Robot_Power 		: BOOL;				// [24电机上电]
	Walking_Welding_Robot_Home_Execute	: BOOL;				// [找零使能]
	Walking_Welding_Robot_Moving_Execute: BOOL;				// [运动使能]
	
	// ====== 控制类型选择 ======
	User_Moving_Control					: BOOL;				// 用户输入目标位置进行运动
	Auto_Moving_Control					: BOOL;				// 机器人自主根据Walking_Robot_Movement的默认参数进行运动
END_VAR

VAR
	// ===================控制信号输入=============
	// 六足运动位置定义(按潘阳坐标系) - 用户操作控制
		// 用户指定目标位置
	Robot_Walking_Z						: LREAL := 2;		// 用户指定运动 : Z方向目标位置
	Robot_Walking_X						: LREAL := 0.8;		// 用户指定运动 : X方向目标位置
	Robot_Walking_alpha					: LREAL := pi/6;	// 用户指定运动 : 绕Y轴旋转角度
	Robot_Walking_Velocity				: LREAL := 0.04;	// 用户指定运动 : 机器人运动速度默认0.04m/s
		// 机器人各方向运动速度
	Robot_Walking_Vx					: LREAL;			// X方向运动速度
	Robot_Walking_Vz					: LREAL;			// Z方向运动速度
	Robot_Walking_Va					: LREAL;			// Y方向转动速度
		// 机器人从当前位置运动到目标位置所需时间
	Robot_Walking_t						: LREAL;			// 运动总时间
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
Logic_Control();			// 逻辑控制程序

Input_Calculate();			// 用户输入参数计算]]></ST>
    </Implementation>
    <Action Name="Input_Calculate" Id="{b5c30816-2ced-4339-a33f-bf0265d57637}">
      <Implementation>
        <ST><![CDATA[


// 用户指定目标位置,以当前位置为[0,0,0,0,0,0],按照机器人进行匀速运动,计算三个方向的速度
	// 沿X方向移动的速度分量 Vx = V * sin(theta)
Robot_Walking_Vx 	:= Robot_Walking_Velocity * SIN(ATAN(Robot_Walking_X/Robot_Walking_Z));
	// 沿Z方向移动的速度分量 Vz = V * cos(theta)
Robot_Walking_Vz 	:= Robot_Walking_Velocity * COS(ATAN(Robot_Walking_X/Robot_Walking_Z));
	// 机器人运动的总时间 t = Z / Vz
Robot_Walking_t		:= Robot_Walking_Z / Robot_Walking_Vz;	
	// 沿Y方向转动的速度分量 Va = alpha / t
Robot_Walking_Va	:= Robot_Walking_alpha / Robot_Walking_t;


// Simulink里的模型是以最开始的位置为全局坐标系,走到目标位置后
// 再想走一段的话重新给Vx,Vz,Va会发生什么呢？  

// 如果此时将Simulink模型的输入时间改为t=0会发生什么

]]></ST>
      </Implementation>
    </Action>
    <Action Name="Logic_Control" Id="{e5c642c3-d7b4-4082-93ff-06dce25ef1a4}">
      <Implementation>
        <ST><![CDATA[// ************************整体移动焊接机器人控制逻辑***********************

//  激活整个模块后,允许使用界面上的按钮进行操作,这样才能进行整体上电、找零、运动
IF Walking_Welding_Robot_Joint_control THEN
	// 上电、找零、运动三者逻辑
		// 未上电,不能找零和运动
	IF NOT Walking_Welding_Robot_Power THEN
		Walking_Welding_Robot_Home_Execute 	:= FALSE;
		Walking_Welding_Robot_Moving_Execute:= FALSE;
	END_IF
		// 找零时,不能运动
	IF Walking_Welding_Robot_Home_Execute THEN
		Walking_Welding_Robot_Moving_Execute:= FALSE;
	END_IF
		// 运动时,不能找零
	IF Walking_Welding_Robot_Moving_Execute THEN
		Walking_Welding_Robot_Home_Execute 	:= FALSE;
	END_IF	

	// 上电逻辑
		// [24电机上电]开启,则通过对应的控制PRG直接将所有电机整体上电
	IF Walking_Welding_Robot_Power THEN
		Walking_Robot_Control.Power_Execute 	:= TRUE;
		Walking_Robot_Control.Robot_Power		:= TRUE;
		Welding_Arm_Control.Power_Execute 		:= TRUE;
		Welding_Arm_Control.Welding_Arm_Power 	:= TRUE;
		// [24电机上电]关闭,通过对应的控制PRG直接将所有电机整体断电
	ELSIF NOT Walking_Welding_Robot_Power THEN
		Walking_Robot_Control.Power_Execute 	:= FALSE;
		Walking_Robot_Control.Robot_Power		:= FALSE;
		Welding_Arm_Control.Power_Execute 		:= FALSE;	
		Walking_Robot_Control.Robot_Power		:= FALSE;
	END_IF
		
	// 找零逻辑
		// [找零使能],则允许用户对焊接臂/步行机器人分别进行整体找零
		// 但仅仅是允许,找零动作的发生还需要用户通过界面上的按钮进行操作
	IF Walking_Welding_Robot_Home_Execute THEN
		Walking_Robot_Control.Home_Execute 		:= TRUE;	// 六足找零使能开启
		Walking_Robot_Control.Robot_Home_Set	:= TRUE;	// 六足单组退找零使能开启
		Welding_Arm_Control.Home_Execute 		:= TRUE;	// 焊接臂找零使能开启
	ELSIF NOT Walking_Welding_Robot_Home_Execute THEN
		Walking_Robot_Control.Home_Execute 		:= FALSE;
		Walking_Robot_Control.Robot_Home_Set	:= FALSE;
		Welding_Arm_Control.Home_Execute 		:= FALSE;
	END_IF
	
	// 两种控制方式互斥
	IF User_Moving_Control THEN
		Auto_Moving_Control := FALSE;
	END_IF
	IF Auto_Moving_Control THEN
		User_Moving_Control := FALSE;
	END_IF
	
	// 运动控制逻辑
	IF Walking_Welding_Robot_Moving_Execute THEN
		// [运动使能],则允许用户对焊接臂/步行机器人分别进行运动控制
		// 但运动使能也仅仅是允许运动,运动的发生还需要用户通过界面上的按钮进行操作
		Walking_Robot_Movement.ExSetPoint_Execute 		:= TRUE;
		Welding_Arm_Movement.ExSetPoint_Execute 		:= TRUE;
		// 使能后,进行用户自定义运动控制
		IF User_Moving_Control THEN
			Walking_Robot_Movement.ExtSetPointEnable	:= TRUE;
			Walking_Robot_Movement.ExtSetPointDisable	:= FALSE;
		ELSIF NOT User_Moving_Control THEN
			Walking_Robot_Movement.ExtSetPointEnable	:= FALSE;
			Walking_Robot_Movement.ExtSetPointDisable	:= TRUE;
		END_IF
		// 使能后,进行自主运动控制
		IF Auto_Moving_Control THEN
			;
		END_IF
	ELSIF NOT Walking_Welding_Robot_Moving_Execute THEN
		// 使能关闭,无论是用户自定义控制,还是自主运动控制,都不允许
		Auto_Moving_Control := FALSE;
		User_Moving_Control := FALSE;
		// 此外,焊接臂/步行机器人[外部信号发生使能]均关闭,不能进行相应的外部发生运动控制
		Walking_Robot_Movement.ExSetPoint_Execute 	:= FALSE;
		Welding_Arm_Movement.ExSetPoint_Execute 	:= FALSE;
	END_IF
	
		// 用户控制方式
	IF User_Moving_Control THEN
		IF (Robot_Walking_Z-Walking_Robot_Movement.Act_Slice[3])< 0.05 OR (Robot_Walking_X-Walking_Robot_Movement.Act_Slice[4])<0.05 THEN
			// 到达目标位置,并且是六条腿支撑(state=2,realstate=3)的情况下,停止运动,并将User_Moving_Control复位
			IF Walking_Robot_Movement.state = 2 AND Walking_Robot_Movement.realState = 3 THEN
				Walking_Robot_Movement.ExtSetPointEnable 	:= FALSE;
				Welding_Arm_Movement.ExtSetPointEnable 		:= FALSE;
			END_IF
		//ELSE
			//Walking_Robot_Movement.ExtSetPointEnable 		:= TRUE;
			//Welding_Arm_Movement.ExtSetPointEnable 		:= FALSE;
		END_IF
		// 自主控制方式
	ELSIF Auto_Moving_Control THEN
		IF ABS(Walking_Robot_Movement.Act_Slice[3]-Robot_Walking_Z)<0.1 OR ABS(Walking_Robot_Movement.Act_Slice[4]-Robot_Walking_X)<0.1 THEN
			IF Walking_Robot_Movement.state = 2 AND Walking_Robot_Movement.realState = 3 THEN
				Walking_Robot_Movement.ExtSetPointEnable 	:= FALSE;
				Welding_Arm_Movement.ExtSetPointEnable 		:= TRUE;
			END_IF
		ELSE
			Walking_Robot_Movement.ExtSetPointEnable 		:= TRUE;
			Welding_Arm_Movement.ExtSetPointEnable 			:= FALSE;
		END_IF
	END_IF
	
	
	// 不激活界面,因此界面所有的按钮失效
ELSIF NOT Walking_Welding_Robot_Joint_Control THEN
	// 上电按钮失效
	Walking_Welding_Robot_Power 			:= FALSE;
	// 找零按钮失效
	Walking_Welding_Robot_Home_Execute 		:= FALSE;
	// 运动按钮失效(包括使能按钮和运动开始按钮)
	Walking_Welding_Robot_Moving_Execute	:= FALSE;
	User_Moving_Control						:= FALSE;
	Auto_Moving_Control						:= FALSE;
	
	// 这里需要注意:如果Walking_Welding_Robot_Control关闭了,不能直接对焊接臂和六足中的各个信号进行去使能
	
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="Variable_Monitor" Id="{33504c41-e640-46b2-bb5c-9ffd8f6d3996}">
      <Implementation>
        <ST><![CDATA[// =====================关键数据信号监测======================]]></ST>
      </Implementation>
    </Action>
    <Action Name="Variable_Set" Id="{803a4a8c-6e47-4b51-ae86-485a4f622ce6}">
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="Walking_Welding_Robot_Control">
      <LineId Id="180" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Walking_Welding_Robot_Control.Input_Calculate">
      <LineId Id="30" Count="1" />
      <LineId Id="2" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="39" Count="1" />
      <LineId Id="42" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="6" Count="1" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="Walking_Welding_Robot_Control.Logic_Control">
      <LineId Id="128" Count="1" />
      <LineId Id="125" Count="0" />
      <LineId Id="327" Count="0" />
      <LineId Id="331" Count="12" />
      <LineId Id="328" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="223" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="253" Count="0" />
      <LineId Id="85" Count="1" />
      <LineId Id="165" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="116" Count="1" />
      <LineId Id="167" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="121" Count="1" />
      <LineId Id="171" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="353" Count="6" />
      <LineId Id="302" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="371" Count="1" />
      <LineId Id="147" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="373" Count="3" />
      <LineId Id="256" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="284" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="280" Count="1" />
      <LineId Id="363" Count="2" />
      <LineId Id="148" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="228" Count="1" />
      <LineId Id="370" Count="0" />
      <LineId Id="230" Count="19" />
      <LineId Id="251" Count="0" />
      <LineId Id="377" Count="1" />
      <LineId Id="250" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="291" Count="1" />
      <LineId Id="295" Count="3" />
      <LineId Id="368" Count="0" />
      <LineId Id="366" Count="0" />
      <LineId Id="369" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="Walking_Welding_Robot_Control.Variable_Monitor">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="Walking_Welding_Robot_Control.Variable_Set">
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>